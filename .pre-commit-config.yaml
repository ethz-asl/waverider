minimum_pre_commit_version: 2.9.3
default_language_version:
  # Force all unspecified python hooks to run python3
  python: python3
  ruby: 2.7.2

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.1.0
    hooks:
      - name: Trim trailing whitespaces
        id: trailing-whitespace
      - name: Add empty line to end of file
        id: end-of-file-fixer
      - name: Check that exectuables have shebangs
        id: check-executables-have-shebangs
      - name: Check XML file syntax parseability
        id: check-xml
      - name: Check JSON file syntax parseability
        id: check-json
      - name: Check YAML file syntax parseability
        id: check-yaml
        args: [ --allow-multiple-documents ]
      - name: Block commits to main branch
        id: no-commit-to-branch
        args: [ '--branch', 'main' ]
      - name: Check that no large files were added (>500kB)
        id: check-added-large-files
        args: [ "--maxkb=500" ]
      - name: Checks that no unresolved merge conflict are committed
        id: check-merge-conflict

  - repo: https://github.com/google/yapf
    rev: v0.31.0
    hooks:
      - name: Format python files with yapf
        id: yapf

  - repo: https://github.com/PyCQA/pylint
    rev: v2.12.2
    hooks:
      - name: Lint python files with pylint
        id: pylint
        args: [ --rcfile=tooling/git_hook_configs/.pylintrc ]

  - repo: local
    hooks:
      - name: Format C++ files with clang-format
        id: clang-format
        language: system
        files: \.(c|cc|cxx|cpp|h|hpp|hxx)$
        entry: clang-format-11 -i
        args: [ -style=file ]
      - name: Check C++ file style with cpplint
        id: cpplint
        language: python
        files: \.(c|cc|cxx|cpp|h|hpp|hxx)$
        entry: cpplint
        args: [ "--verbose=3" ]
      - name: Check C++ file correctness with cppcheck
        id: cppcheck
        description: Check correctness of C code using cppcheck.
        language: system
        files: \.(c|cc|cxx|cpp|h|hpp|hxx)$
        entry: cppcheck --error-exitcode=1
        args: [ --std=c++17, --language=c++, --force, --quiet,
                --library=googletest,
                "--enable=warning,performance,portability",
                "--suppress=constStatement",
                "--suppress=syntaxError:*test/src/*/test_*.cc" ]

  - repo: https://github.com/cheshirekow/cmake-format-precommit
    rev: v0.6.13
    hooks:
      - name: Format CMake files with cmake-format
        id: cmake-format
        args: [ --config-files, tooling/git_hook_configs/.cmake-format.yaml ]
        additional_dependencies: [ pyyaml>=5.1 ]
      - name: Lint CMake files with cmake-lint
        id: cmake-lint
        additional_dependencies: [ pyyaml>=5.1 ]

  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.8.0.3
    hooks:
      - name: Check shell scripts with shellcheck
        id: shellcheck

  - repo: https://github.com/hadolint/hadolint
    rev: v2.8.0
    hooks:
      - name: Lint dockerfiles with hadolint
        id: hadolint
        args: [ --config=tooling/git_hook_configs/.hadolint.yaml ]

  - repo: https://github.com/sirosen/check-jsonschema
    rev: 0.10.1
    hooks:
      - name: Check GitHub workflow file schema conformance
        id: check-github-workflows
      - name: Check GitHub action files schema conformance
        id: check-github-actions

  - repo: https://github.com/markdownlint/markdownlint
    rev: v0.11.0
    hooks:
      - name: Lint markdown files with markdownlint
        id: markdownlint
        args: [ --rules="~MD013" ]
